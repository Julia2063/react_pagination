{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","pages","Math","ceil","handleArrow","direction","length","className","classNames","disabled","href","onClick","map","page","active","handleClickPage","optionValues","App","useState","setPerPage","start","end","extremeItems","setExtremeItems","selectedPage","setSelectedPage","useEffect","pagesStep","value","id","onChange","event","target","el","htmlFor","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAQX,EAAW,EAAGY,KAAKC,KAAKN,EAAQC,IAQxCM,EAAc,SAACC,GAED,IAAhBN,GAAmC,SAAdM,GACjBN,IAAgBE,EAAMK,QAAwB,SAAdD,GAItCL,EAA2B,SAAdK,EAAuBN,EAAc,EAAIA,EAAc,IAGtE,OACE,qBAAIQ,UAAU,aAAd,UACE,oBAAIA,UACFC,IAAW,YAAa,CAAEC,SAA0B,IAAhBV,IADtC,SAIE,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBX,EAAoB,OAAS,QAC5CY,QAAS,kBAAMP,EAAY,SAL7B,oBAWDH,EAAMW,KAAI,SAAAC,GAAI,OACb,oBACEN,UACEC,IAAW,YAAa,CAAEM,OAAQD,IAASd,IAF/C,SAME,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBA5CK,SAACE,GACnBA,IAASd,GACXC,EAAaa,GA0CQE,CAAgBF,IAJjC,SAMGA,KAREA,MAaT,oBAAIN,UACFC,IAAW,YAAa,CAAEC,SAAUV,IAAgBE,EAAMK,SAD5D,SAIE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAK,QACL,gBAAeX,IAAgBE,EAAMK,OAAS,OAAS,QACvDK,QAAS,kBAAMP,EAAY,SAL7B,wBCpEFY,EAAe,CAAC,EAAG,EAAG,GAAI,IAEnBC,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOpB,EAAP,KAAgBqB,EAAhB,KACA,EAAwCD,mBAAS,CAAEE,MAAO,EAAGC,IAAKvB,IAAlE,mBAAOwB,EAAP,KAAqBC,EAArB,KACA,EAAwCL,mBAAS,GAAjD,mBAAOM,EAAP,KAAqBC,EAArB,KAEQL,EAAeE,EAAfF,MAAOC,EAAQC,EAARD,IAwBf,OAbAK,qBAAU,WACR,IAAMC,EAAY7B,GAAW0B,EAAe,GAE5CD,EACE,CACEH,MAAOO,EAAY,EACnBN,IAAKM,EAAY7B,EAzBX,GA0BF6B,EAAY7B,EA1BV,OA8BT,CAAC0B,IAGF,sBAAKjB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWiB,EADX,mBACkCJ,EADlC,cAC6CC,EAD7C,eApCQ,GAoCR,OAIA,sBAAKd,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACEqB,MAAO9B,EACP,UAAQ,kBACR+B,GAAG,kBACHtB,UAAU,eACVuB,SArCW,SAACC,GACpB,IAAQH,EAAUG,EAAMC,OAAhBJ,MAERH,EAAgB,GAEhBN,GAAYS,GACZL,EAAgB,CAAEH,MAAO,EAAGC,KAAMO,KA0B5B,SAOGZ,EAAaJ,KAAI,SAAAqB,GAAE,OAAI,wBAAQL,MAAOK,EAAf,SAA6BA,GAALA,UAIpD,uBAAOC,QAAQ,kBAAkB3B,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEV,MA1DM,GA2DNC,QAASA,EACTC,YAAayB,EACbxB,aAAc,SAAAa,GAAI,OAAIY,EAAgBZ,MAExC,6BACGvB,EAAW8B,EAAOC,GAAKT,KAAI,SAAAlB,GAAC,OAC3B,oBAAI,UAAQ,OAAZ,wBACWA,IADaA,YCnElCyC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5a5ce9f3.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number,\n  perPage: Page,\n  currentPage: Page,\n  onPageChange: (page: Page) => void,\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pages = getNumbers(1, Math.ceil(total / perPage));\n\n  const handleClickPage = (page: Page) => {\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  const handleArrow = (direction: string) => {\n    if ((\n      currentPage === 1 && direction === 'prev')\n      || (currentPage === pages.length && direction === 'next')) {\n      return;\n    }\n\n    onPageChange(direction === 'next' ? currentPage + 1 : currentPage - 1);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={\n        classNames('page-item', { disabled: currentPage === 1 })\n      }\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1 ? 'true' : 'false'}\n          onClick={() => handleArrow('prev')}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          className={\n            classNames('page-item', { active: page === currentPage })\n          }\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => handleClickPage(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={\n        classNames('page-item', { disabled: currentPage === pages.length })\n      }\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pages.length ? 'true' : 'false'}\n          onClick={() => handleArrow('next')}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\nconst total = 42;\nconst optionValues = [3, 5, 10, 20];\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [extremeItems, setExtremeItems] = useState({ start: 1, end: perPage });\n  const [selectedPage, setSelectedPage] = useState(1);\n\n  const { start, end } = extremeItems;\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    const { value } = event.target;\n\n    setSelectedPage(1);\n\n    setPerPage(+value);\n    setExtremeItems({ start: 1, end: +value });\n  };\n\n  useEffect(() => {\n    const pagesStep = perPage * (selectedPage - 1);\n\n    setExtremeItems(\n      {\n        start: pagesStep + 1,\n        end: pagesStep + perPage < total\n          ? pagesStep + perPage\n          : total,\n      },\n    );\n  }, [selectedPage]);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${selectedPage} (items ${start} - ${end} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            value={perPage}\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handleSelect}\n          >\n            {optionValues.map(el => <option value={el} key={el}>{el}</option>)}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={selectedPage}\n        onPageChange={page => setSelectedPage(page)}\n      />\n      <ul>\n        {getNumbers(start, end).map(n => (\n          <li data-cy=\"item\" key={n}>\n            {`Item ${n}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}